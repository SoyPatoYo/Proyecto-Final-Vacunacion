/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.CentroSaludData;
import entidades.CentroSalud;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Matias
 */
public class CargarCentro extends javax.swing.JPanel {

    CentroSaludData csD;
    private DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    public CargarCentro() {
        initComponents();
        armarCabecera();
        tablaMarcaCantidad.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboBoxZona = new javax.swing.JComboBox<>();
        textNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textTotalD = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMarcaCantidad = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        textVacunaciones = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(493, 526));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Centros de Salud");

        comboBoxZona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Norte", "Sur", "Este", "Oeste", "Centro" }));
        comboBoxZona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxZonaActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Centro");

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Total de Dosis");

        textTotalD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTotalDActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tablaMarcaCantidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Marca", "Cantidad"
            }
        ));
        jScrollPane1.setViewportView(tablaMarcaCantidad);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Zona");

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("hoy");

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Vacunaciones");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboBoxZona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(textTotalD, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textVacunaciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(33, 33, 33))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxZona, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textVacunaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTotalD, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textTotalDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTotalDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTotalDActionPerformed

    private void comboBoxZonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxZonaActionPerformed
        borrarFilas();
        try {

            csD = new CentroSaludData();
            String zona = (String) comboBoxZona.getSelectedItem();

            if (zona.equals("Norte")) {
                List<CentroSalud> centros = csD.buscarCentrosSaludPorNombre("Centro Medico Norte");
                CentroSalud centro = centros.get(0);
                textNombre.setText(centro.getNombre());
                int total = 0;
                for (CentroSalud c : centros) {
                    total += c.getCantDosis();
                }
                //int total = centro1.getCantDosis() + centro2.getCantDosis() + centro3.getCantDosis() + centro4.getCantDosis();
                textTotalD.setText("" + total);
                textVacunaciones.setText("" + Principal.numeroAzar(200));
                for (CentroSalud c : centros) {
                    if (null != c.getLaboratorio().getLaboratorio()) {
                        cargarDatos(c);
                    }
                }
            } else if (zona.equals("Sur")) {
                List<CentroSalud> centros = csD.buscarCentrosSaludPorNombre("Centro Medico Sur");
                CentroSalud centro = centros.get(0);
                textNombre.setText(centro.getNombre());
                int total = 0;
                for (CentroSalud c : centros) {
                    total += c.getCantDosis();
                }
                textTotalD.setText("" + total);
                textVacunaciones.setText("" + Principal.numeroAzar(200));
                for (CentroSalud c : centros) {
                    if (null != c.getLaboratorio().getLaboratorio()) {
                        cargarDatos(c);
                    }
                }
            } else if (zona.equals("Este")) {
                List<CentroSalud> centros = csD.buscarCentrosSaludPorNombre("Centro Medico Este");
                CentroSalud centro = centros.get(0);
                textNombre.setText(centro.getNombre());
                int total = 0;
                for (CentroSalud c : centros) {
                    total += c.getCantDosis();
                }
                textTotalD.setText("" + total);
                textVacunaciones.setText("" + Principal.numeroAzar(200));
                for (CentroSalud c : centros) {
                    if (null != c.getLaboratorio().getLaboratorio()) {
                        cargarDatos(c);
                    }
                }
            } else if (zona.equals("Oeste")) {
                List<CentroSalud> centros = csD.buscarCentrosSaludPorNombre("Centro Medico Oeste");
                CentroSalud centro = centros.get(0);
                textNombre.setText(centro.getNombre());
                int total = 0;
                for (CentroSalud c : centros) {
                    total += c.getCantDosis();
                }
                textTotalD.setText("" + total);
                textVacunaciones.setText("" + Principal.numeroAzar(200));
                for (CentroSalud c : centros) {
                    if (null != c.getLaboratorio().getLaboratorio()) {
                        cargarDatos(c);
                    }
                }
            } else if (zona.equals("Centro")) {
                List<CentroSalud> centros = csD.buscarCentrosSaludPorNombre("Centro Medico Centro");
                CentroSalud centro = centros.get(0);
                textNombre.setText(centro.getNombre());
                int total = 0;
                for (CentroSalud c : centros) {
                    total += c.getCantDosis();
                }
                textTotalD.setText("" + total);
                textVacunaciones.setText("" + Principal.numeroAzar(200));
                for (CentroSalud c : centros) {
                    if (null != c.getLaboratorio().getLaboratorio()) {
                        cargarDatos(c);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No hay Centros de Salud en esa zona.");
            textNombre.setText("");
            textTotalD.setText("");
            textVacunaciones.setText("");
        }
    }//GEN-LAST:event_comboBoxZonaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxZona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaMarcaCantidad;
    private javax.swing.JTextField textNombre;
    private javax.swing.JTextField textTotalD;
    private javax.swing.JTextField textVacunaciones;
    // End of variables declaration//GEN-END:variables
    private void cargarDatos(CentroSalud centro) {
        modelo.addRow(new Object[]{centro.getDireccion(), centro.getLaboratorio().getMarcaVacuna(), centro.getCantDosis()});
    }

    private void armarCabecera() {
        modelo.addColumn("Direccion");
        modelo.addColumn("Marca");
        modelo.addColumn("Cantidad");

        tablaMarcaCantidad.setModel(modelo);
    }

    private void borrarFilas() {
        int filas = tablaMarcaCantidad.getRowCount() - 1;

        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
}
